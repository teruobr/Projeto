/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bean.Empresa;
import bean.Experiencias;
import bean.Usuario;
import interfaces.RExperienciasRemote;
import interfaces.RUsuarioRemote;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;


/**
 *
 * @author Thiago
 */
public class AlterarStatusExperiencia extends javax.swing.JFrame {

    /**
     * Creates new form AlterarStatusExperiencia
     */
    
    private Empresa empresa;
    
    private Experiencias experiencia;
    
    private Usuario usuario;
            
    private List<Experiencias> experience;
    
    private List<Usuario> user;

    public Experiencias getExperiencia() {
        return experiencia;
    }

    public void setExperiencia(Experiencias experiencia) {
        this.experiencia = experiencia;                     
        setTxtStatus(getExperiencia().getStatus()); 
        setTxtDescricaoExperiencia(getExperiencia().getDescricaoExperiencia());
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
        setTxtNome(this.usuario.getNome());
    }
    
    public Empresa getEmpresa() {
        return empresa;
    }

    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;        
    }

    public List<Experiencias> getExp() {
        return experience;
    }

    public void setExp(List<Experiencias> exp) {
        this.experience = exp;
    }

    public List<Usuario> getUser() {
        return user;
    }

    public void setUser(List<Usuario> user) {
        this.user = user;
    }
           
    public AlterarStatusExperiencia() {
        initComponents();
        centralizar();
        setResizable(false);
        txtDescricaoExperiencia.setLineWrap(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricaoExperiencia = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        btnVoltar = new javax.swing.JButton();
        btnAprovar = new javax.swing.JButton();
        btnReprovar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Status Experiência");

        txtNome.setEnabled(false);
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        jLabel4.setText("Descrição da Exp.:");

        txtDescricaoExperiencia.setColumns(20);
        txtDescricaoExperiencia.setRows(5);
        txtDescricaoExperiencia.setEnabled(false);
        jScrollPane1.setViewportView(txtDescricaoExperiencia);

        jLabel3.setText("Nome:");

        jLabel9.setText("Status:");

        txtStatus.setEnabled(false);
        txtStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnAprovar.setText("Aprovar");
        btnAprovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprovarActionPerformed(evt);
            }
        });

        btnReprovar.setText("Reprovar");
        btnReprovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReprovarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(149, 149, 149))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(btnVoltar)
                .addGap(70, 70, 70)
                .addComponent(btnAprovar)
                .addGap(59, 59, 59)
                .addComponent(btnReprovar)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtStatus)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(9, 9, 9)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(btnAprovar)
                    .addComponent(btnReprovar))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(106, 106, 106)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(114, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusActionPerformed
        
    }//GEN-LAST:event_txtStatusActionPerformed

    private void btnReprovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReprovarActionPerformed
        UIManager.put("OptionPane.noButtonText", "Não");
        UIManager.put("OptionPane.yesButtonText", "Sim");
        if (validarReprovacao()) {
            int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja reprovar esta experiência?", "Mensagem do Sistema", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                try {
                    InitialContext ctx = new InitialContext();
                    Experiencias exp = new Experiencias();
                    exp.setStatus("REPROVADO");
                    exp.setDescricaoExperiencia(experiencia.getDescricaoExperiencia());
                    exp.setCNPJ(experiencia.getCNPJ());
                    exp.setIdUsuario(usuario.getId());
                    exp.setNome(experiencia.getNome());
                    exp.setId(experiencia.getId());
                    RExperienciasRemote experiencias = (RExperienciasRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RExperiencias");
                    RUsuarioRemote usuarioExperiencia = (RUsuarioRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RUsuario");
                    experiencias.alterar(exp);
                    exp = new Experiencias();
                    exp.setCNPJ(experiencia.getCNPJ());
                    experience = experiencias.consultarCnpjEmpresa(exp);
                    user = new ArrayList<Usuario>();
                    for (int i = 0; i < experience.size(); i++) {
                        Usuario usuario = usuarioExperiencia.consultaUsuario(experience.get(i).getIdUsuario());
                        user.add(usuario);
                    }
                    JOptionPane.showMessageDialog(this, "Experiência reprovada com sucesso!");
                    Aplicacao app = new Aplicacao(getEmpresa(), getExp(), getUser());
                    app.setTitle("Projeto Interdisciplinar II");
                    app.setVisible(true);
                    dispose();
                } catch (NamingException ex) {
                    Logger.getLogger(AlterarStatusExperiencia.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnReprovarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        Aplicacao app = new Aplicacao(getEmpresa(), getExp(), getUser());
        app.setTitle("Projeto Interdisciplinar II");
        app.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAprovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprovarActionPerformed
        UIManager.put("OptionPane.noButtonText", "Não");
        UIManager.put("OptionPane.yesButtonText", "Sim");
        if (validarAprovacao()) {
            int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja aprovar esta experiência?", "Mensagem do Sistema", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                try {
                    InitialContext ctx = new InitialContext();
                    Experiencias exp = new Experiencias();
                    exp.setStatus("APROVADO");
                    exp.setDescricaoExperiencia(experiencia.getDescricaoExperiencia());
                    exp.setCNPJ(experiencia.getCNPJ());
                    exp.setIdUsuario(usuario.getId());
                    exp.setNome(experiencia.getNome());
                    exp.setId(experiencia.getId());
                    RExperienciasRemote experiencias = (RExperienciasRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RExperiencias");
                    RUsuarioRemote usuarioExperiencia = (RUsuarioRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RUsuario");
                    experiencias.alterar(exp);
                    exp = new Experiencias();
                    exp.setCNPJ(experiencia.getCNPJ());
                    experience = experiencias.consultarCnpjEmpresa(exp);
                    user = new ArrayList<Usuario>();
                    for (int i = 0; i < experience.size(); i++) {
                        Usuario usuario = usuarioExperiencia.consultaUsuario(experience.get(i).getIdUsuario());
                        user.add(usuario);
                    }
                    JOptionPane.showMessageDialog(this, "Experiência aprovada com sucesso!");
                    Aplicacao app = new Aplicacao(getEmpresa(), getExp(), getUser());
                    app.setTitle("Projeto Interdisciplinar II");
                    app.setVisible(true);
                    dispose();
                } catch (NamingException ex) {
                    Logger.getLogger(AlterarStatusExperiencia.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnAprovarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlterarStatusExperiencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlterarStatusExperiencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlterarStatusExperiencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlterarStatusExperiencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AlterarStatusExperiencia().setVisible(true);
            }
        });
    }
    
    private void centralizar() {
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension janela = getSize();
        if (janela.height > screen.height) {
            setSize(janela.width, screen.height);
        }
        if (janela.width > screen.width) {
            setSize(screen.width, janela.height);
        }
        setLocation((screen.width - janela.width) / 2, (screen.height - janela.height) / 2);
    }

    public JTextArea getTxtDescricaoExperiencia() {
        return txtDescricaoExperiencia;
    }

    public void setTxtDescricaoExperiencia(String txtDescricaoExperiencia) {
        this.txtDescricaoExperiencia.setText(txtDescricaoExperiencia);
    }

    public JTextField getTxtNome() {
        return txtNome;
    }

    public void setTxtNome(String txtNome) {
        this.txtNome.setText(txtNome);
    }

    public JTextField getTxtStatus() {
        return txtStatus;
    }

    public void setTxtStatus(String txtStatus) {
        this.txtStatus.setText(txtStatus);
    }    
    
    public boolean validarAprovacao() {
        if (txtStatus.getText().trim().equals("APROVADO")) {
            JOptionPane.showMessageDialog(this, "Experiência profissional já aprovada!");
            return false;
        }
        return true;
    }
    
    public boolean validarReprovacao() {
        if (txtStatus.getText().trim().equals("REPROVADO")) {
            JOptionPane.showMessageDialog(this, "Experiência profissional já reprovada!");
            return false;
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAprovar;
    private javax.swing.JButton btnReprovar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtDescricaoExperiencia;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables
}
