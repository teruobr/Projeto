/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bean.*;
import interfaces.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Thiago
 */
public class DetalheVaga extends javax.swing.JFrame {

    /**
     * Creates new form DetalheVaga
     */
    private List<VagasUsuario> lista;
    
    private List<Usuario> listaUsuariosVaga = new ArrayList<Usuario>();
    
    private Vagas listaVaga;
    
    private Empresa empresa;
    
    private List<Experiencias> exp;
    
    private DetalheUsuario detalheUsuario = new DetalheUsuario();
    
    private List<Experiencias> experienciasTotais;
    
    private List<List<Experiencias>> experienciasUsuario;

    public List<Experiencias> getExp() {
        return exp;
    }

    public void setExp(List<Experiencias> exp) {
        this.exp = exp;
    }

    public List<Usuario> getUser() {
        return user;
    }

    public void setUser(List<Usuario> user) {
        this.user = user;
    }
    private List<Usuario> user;

    public Empresa getEmpresa() {
        return empresa;
    }

    public List<VagasUsuario> getLista() {
        return lista;
    }

    public void setLista(List<VagasUsuario> lista) {
        this.lista = lista;
        obterDadosTabela();
        labelVazioFocusLost(null);
    }

    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
        obterDadosTela();
    }

    public Vagas getListaVaga() {
        return listaVaga;
    }

    public void setListaVaga(Vagas lista) {
        this.listaVaga = lista;
    }

    public DetalheVaga() {
        initComponents();
        centralizar();
        setResizable(false);
        experienciasUsuario = new ArrayList<List<Experiencias>>();
        txtDetalhe.setLineWrap(true);
        setTitle("Projeto Interdisciplinar II");
        chamaCandidato();
        deletarCandidatoVagaSelecionada();
        InitialContext ctx = null;
        List<AreaAtuacao> areas = null;
        try {
            ctx = new InitialContext();
            RAreaAtuacaoRemote areasremote = (RAreaAtuacaoRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RAreaAtuacao");

            areas = areasremote.consultar();
            if (areas != null) {
                for (int i = 0; i < areas.size(); i++) {
                    cbArea.addItem(areas.get(i).getNome());
                }
            }

        } catch (NamingException ex) {
            Logger.getLogger(DetalheVaga.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDetalhe = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        cbArea = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cbAtuacao = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        cbEstado = new javax.swing.JComboBox();
        cbCidade = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        btnManutencao = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCandidatoVaga = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        labelVazio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setText("Bairro:");

        txtTitulo.setEnabled(false);

        txtDetalhe.setColumns(20);
        txtDetalhe.setRows(5);
        txtDetalhe.setEnabled(false);
        jScrollPane1.setViewportView(txtDetalhe);

        jLabel4.setText("Descrição da Vaga:");

        cbArea.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Analise", "Docência e Pesquisa", "Empresário", "Gerencia", "Programação", "Redes" }));
        cbArea.setEnabled(false);
        cbArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAreaActionPerformed(evt);
            }
        });

        jLabel5.setText("Área de Atuação:");

        cbAtuacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Técnico", "Estagiário", "Junior", "Pleno", "Senior", "Gerente" }));
        cbAtuacao.setEnabled(false);

        jLabel2.setText("Detalhe de Vaga");

        jLabel3.setText("Titulo da Vaga:");

        txtBairro.setEnabled(false);
        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });

        cbEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "SP" }));
        cbEstado.setEnabled(false);

        cbCidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "São Paulo", "Santo André", "São Bernardo do Campo", "São Caetano do Sul" }));
        cbCidade.setEnabled(false);

        jLabel6.setText("Nível de Atuação:");

        jLabel8.setText("Cidade:");

        jLabel7.setText("Estado:");

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnManutencao.setText("Alterar");
        btnManutencao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManutencaoActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.setEnabled(false);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.setEnabled(false);
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        tableCandidatoVaga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "E-Mail", "Ver Detalhe", "Remover"
            }
        ));
        tableCandidatoVaga.setMaximumSize(new java.awt.Dimension(21474, 64));
        jScrollPane2.setViewportView(tableCandidatoVaga);

        jLabel1.setText("Candidatos da Vaga");

        labelVazio.setForeground(new java.awt.Color(255, 0, 0));
        labelVazio.setText("Não existem candidatos para esta vaga!");
        labelVazio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                labelVazioFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 6, 6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbArea, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbAtuacao, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelVazio)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnManutencao)
                                .addGap(26, 26, 26)
                                .addComponent(btnAtualizar)
                                .addGap(33, 33, 33)
                                .addComponent(btnRemover)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(165, 165, 165))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbAtuacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addComponent(labelVazio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(btnManutencao)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemover))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAreaActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        Aplicacao app = new Aplicacao(getEmpresa(), getExp(), getUser());
        app.setVisible(true);
        app.setTitle("Projeto Interdisciplinar II");
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        UIManager.put("OptionPane.noButtonText", "Não");
        UIManager.put("OptionPane.yesButtonText", "Sim");
        if (validar()) {
            int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja atualizar?", "Mensagem do Sistema", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                Vagas vaga = new Vagas();
                vaga.setAreaAtuacao(String.valueOf(cbArea.getSelectedItem()));
                vaga.setBairro(String.valueOf(txtBairro.getText()));
                vaga.setCidade(String.valueOf(cbCidade.getSelectedItem()));
                vaga.setDetalhe(String.valueOf(txtDetalhe.getText()));
                vaga.setEstado(String.valueOf(cbEstado.getSelectedItem()));
                vaga.setId(getId());
                vaga.setIdEmpresa(getIdEmpresa());
                vaga.setNivelAtuacao(String.valueOf(cbAtuacao.getSelectedItem()));
                vaga.setTitulo(txtTitulo.getText());


                try {
                    InitialContext ctx = new InitialContext();
                    RVagasRemote vagas = (RVagasRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RVagas");
                    vagas.alterar(vaga);
                    JOptionPane.showMessageDialog(this, "Vaga atualizada com sucesso!");

                    btnManutencao.setEnabled(true);
                    btnAtualizar.setEnabled(false);
                    cbArea.setEnabled(false);
                    cbAtuacao.setEnabled(false);
                    cbCidade.setEnabled(false);
                    cbEstado.setEnabled(false);
                    txtBairro.setEnabled(false);
                    txtDetalhe.setEnabled(false);
                    txtTitulo.setEnabled(false);

                    Aplicacao app = new Aplicacao(getEmpresa(), getExp(), getUser());
                    app.setVisible(true);
                    app.setTitle("Projeto Interdisciplinar II");
                    dispose();

                } catch (NamingException ex) {
                    Logger.getLogger(DetalheVaga.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Erro na atualização!");
                }
            }
        }

    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnManutencaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManutencaoActionPerformed
        btnManutencao.setEnabled(false);
        btnAtualizar.setEnabled(true);
        btnRemover.setEnabled(true);
        cbArea.setEnabled(true);
        cbAtuacao.setEnabled(true);
        cbCidade.setEnabled(true);
        cbEstado.setEnabled(true);
        txtBairro.setEnabled(true);
        txtDetalhe.setEnabled(true);
        txtTitulo.setEnabled(true);
    }//GEN-LAST:event_btnManutencaoActionPerformed

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        UIManager.put("OptionPane.noButtonText", "Não");
        UIManager.put("OptionPane.yesButtonText", "Sim");
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja remover esta vaga da base da dados?", "Mensagem do Sistema", JOptionPane.YES_NO_OPTION);
        if (opcao == JOptionPane.YES_OPTION) {
            Vagas vaga = new Vagas();
            vaga.setId(getId());
            try {
                InitialContext ctx = new InitialContext();
                RVagasRemote vagas = (RVagasRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RVagas");
                vagas.excluir(vaga);
                RVagasUsuarioRemote vagaUsuario = (RVagasUsuarioRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RVagasUsuario");
                List<VagasUsuario> lista;
                lista = vagaUsuario.buscarUsuariosVaga(getId());
                for (int i = 0; i < lista.size(); i++) {
                    vagaUsuario.excluir(lista.get(i));
                }
                JOptionPane.showMessageDialog(this, "Vaga removida com sucesso!");
                Aplicacao app = new Aplicacao(getEmpresa(), getExp(), getUser());
                app.setTitle("Projeto Interdisciplinar II");
                app.setVisible(true);
                dispose();
            } catch (NamingException ex) {
                Logger.getLogger(DetalheVaga.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Erro na remoção da vaga!");
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void labelVazioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_labelVazioFocusLost
        labelVazio.setVisible(listaUsuariosVaga.isEmpty());
    }//GEN-LAST:event_labelVazioFocusLost

    public void obterDadosTela() {
        setTxtTitulo(getListaVaga().getTitulo());
        setTxtBairro(getListaVaga().getBairro());
        setTxtDetalhe(getListaVaga().getDetalhe());
        setCbArea(getListaVaga().getAreaAtuacao());
        setCbAtuacao(getListaVaga().getNivelAtuacao());
        setCbCidade(getListaVaga().getCidade());
        setCbEstado(getListaVaga().getEstado());
        setId(getListaVaga().getId());
        setIdEmpresa(getListaVaga().getIdEmpresa());
        //setTxtData(converteData(getListaVaga().getDataFinal()));        
    }

    public void obterDadosTabela() {
        InitialContext ctx = null;
        DefaultTableModel modelo = (DefaultTableModel) tableCandidatoVaga.getModel();
        modelo.setNumRows(0);

        try {
            ctx = new InitialContext();
            RUsuarioRemote usuario = (RUsuarioRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RUsuario");
            DetalheVaga.CorLabel corLabel = new DetalheVaga.CorLabel();
            corLabel.setForeground(Color.BLUE);
            tableCandidatoVaga.getColumnModel().getColumn(2).setCellRenderer(corLabel);
            tableCandidatoVaga.getColumnModel().getColumn(3).setCellRenderer(corLabel);
            RExperienciasRemote experiencias = (RExperienciasRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RExperiencias");

            for (int i = 0; i < lista.size(); i++) {
                Usuario user = usuario.consultaUsuario(getLista().get(i).getIdUsuario());
                listaUsuariosVaga.add(user);
            }
            if (listaUsuariosVaga != null && !listaUsuariosVaga.isEmpty()) {
                for (int i = 0; i < listaUsuariosVaga.size(); i++) {
                    experienciasTotais = new ArrayList<Experiencias>();   
                    Experiencias experience = new Experiencias();
                    experience.setIdUsuario(listaUsuariosVaga.get(i).getId());
                    experienciasTotais = experiencias.consultar(experience);                    
                    experienciasUsuario.add(experienciasTotais);
                    JLabel label = new JLabel("Clique Aqui");
                    label.setForeground(Color.BLUE);
                    Object[] row = {String.valueOf(listaUsuariosVaga.get(i).getNome()), String.valueOf(listaUsuariosVaga.get(i).getEmail()), label.getText(), label.getText()};
                    modelo.addRow(row);
                }
            }
        } catch (NamingException ex) {
            Logger.getLogger(DetalheVaga.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetalheVaga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetalheVaga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetalheVaga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetalheVaga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DetalheVaga().setVisible(true);
            }
        });
    }

    private void centralizar() {
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension janela = getSize();
        if (janela.height > screen.height) {
            setSize(janela.width, screen.height);
        }
        if (janela.width > screen.width) {
            setSize(screen.width, janela.height);
        }
        setLocation((screen.width - janela.width) / 2, (screen.height - janela.height) / 2);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnManutencao;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox cbArea;
    private javax.swing.JComboBox cbAtuacao;
    private javax.swing.JComboBox cbCidade;
    private javax.swing.JComboBox cbEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelVazio;
    private javax.swing.JTable tableCandidatoVaga;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextArea txtDetalhe;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
    private Long id;
    private Long idEmpresa;

    public Long getIdEmpresa() {
        return idEmpresa;
    }

    public void setIdEmpresa(Long idEmpresa) {
        this.idEmpresa = idEmpresa;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public JComboBox getCbArea() {
        return cbArea;
    }

    public void setCbArea(String cbArea) {
        this.cbArea.setSelectedItem(cbArea);
    }

    public JComboBox getCbAtuacao() {
        return cbAtuacao;
    }

    public void setCbAtuacao(String cbAtuacao) {
        this.cbAtuacao.setSelectedItem(cbAtuacao);
    }

    public JComboBox getCbCidade() {
        return cbCidade;
    }

    public void setCbCidade(String cbCidade) {
        this.cbCidade.setSelectedItem(cbCidade);
    }

    public JComboBox getCbEstado() {
        return cbEstado;
    }

    public void setCbEstado(String cbEstado) {
        this.cbEstado.setSelectedItem(cbEstado);
    }

    public JTextField getTxtBairro() {
        return txtBairro;
    }

    public void setTxtBairro(String txtBairro) {
        this.txtBairro.setText(txtBairro);
    }

    public JTextArea getTxtDetalhe() {
        return txtDetalhe;
    }

    public void setTxtDetalhe(String txtDetalhe) {
        this.txtDetalhe.setText(txtDetalhe);
    }

    public JTextField getTxtTitulo() {
        return txtTitulo;
    }

    public void setTxtTitulo(String txtTitulo) {
        this.txtTitulo.setText(txtTitulo);
    }

    /*
     * public MaskFormatter maskData(JFormattedTextField textfield) throws
     * ParseException{ MaskFormatter mask = new MaskFormatter("##/##/####");
     * mask.setOverwriteMode(true); mask.setValidCharacters("0123456789");
     * mask.setPlaceholderCharacter('_'); mask.install(txtData); return mask;  
    }
     */
    private String converteData(Date date) {
        String converte = String.valueOf(date);
        try {
            converte = new SimpleDateFormat("dd/MM/yyyy").format(new SimpleDateFormat("EEE MMM d HH:mm:ss zzz yyyy", Locale.US).parse(converte));
            return converte;
        } catch (ParseException ex) {
            Logger.getLogger(DetalheVaga.class.getName()).log(Level.SEVERE, null, ex);
            return "Erro na conversão da data";
        }
    }

    private boolean validar() {
        if (cbEstado.getSelectedItem().equals("Selecione")
                || cbAtuacao.getSelectedItem().equals("Selecione")
                || cbCidade.getSelectedItem().equals("Selecione")
                || cbArea.getSelectedItem().equals("Selecione")
                || txtBairro.getText().trim().equals("")
                || txtDetalhe.getText().trim().equals("")
                || txtTitulo.getText().trim().equals("")) {


            JOptionPane.showMessageDialog(this, "Preencher todos os campos!");
            return false;
        }
        return true;
    }
    
    public void chamaCandidato() {
        tableCandidatoVaga.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 1 && tableCandidatoVaga.getSelectedColumn() == 2) {
                    detalheUsuario.setUsuario(listaUsuariosVaga.get(tableCandidatoVaga.getSelectedRow()));
                    detalheUsuario.setEmpresa(getEmpresa());
                    detalheUsuario.setExperienciasUsuario(experienciasUsuario.get(tableCandidatoVaga.getSelectedRow()));
                    detalheUsuario.setExp(exp);
                    if (!detalheUsuario.isVisible()) {
                        detalheUsuario.setVisible(true);
                    }
                    dispose();
                }
            }
        });
    }
    
    public void vagaUsuariosVazio() {
        JOptionPane.showMessageDialog(this, "Não existem candidatos para esta vaga!");
    }
    
    public void deletarCandidatoVagaSelecionada() {
        tableCandidatoVaga.addMouseListener(new MouseAdapter() {
            @Override
             public void mouseClicked(MouseEvent e) {
                 if (e.getClickCount() == 1 && tableCandidatoVaga.getSelectedColumn() == 3) {
                     deletaCandidato();                     
                 }
            }
        });
    }
    
    public void deletaCandidato() {
        UIManager.put("OptionPane.noButtonText", "Não");
        UIManager.put("OptionPane.yesButtonText", "Sim");
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja remover este candidato desta vaga?", "Mensagem do Sistema", JOptionPane.YES_NO_OPTION);
        if (opcao == JOptionPane.YES_OPTION) {
            VagasUsuario vagaUsuario = new VagasUsuario();
            vagaUsuario.setIdVaga(listaVaga.getId());
            vagaUsuario.setIdUsuario(listaUsuariosVaga.get(tableCandidatoVaga.getSelectedRow()).getId());
            vagaUsuario.setIdEmpresa(empresa.getId());
            InitialContext ctx;
            try {
                ctx = new InitialContext();
                RVagasUsuarioRemote vagaEmpresaUsuario = (RVagasUsuarioRemote) ctx.lookup("java:global/ProjetoInterdisciplinarII/ProjetoInterdisciplinarII-ejb/RVagasUsuario");
                vagaUsuario = vagaEmpresaUsuario.validaUsuarioVaga(vagaUsuario);
                if (vagaUsuario != null) {
                    vagaEmpresaUsuario.excluir(vagaUsuario);
                    JOptionPane.showMessageDialog(this, "Candidato deletado da vaga com sucesso!");
                    Aplicacao app = new Aplicacao(getEmpresa(), getExp(), getUser());
                    app.setVisible(true);
                    app.setTitle("Projeto Interdisciplinar II");
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro");
                }                
            }catch (NamingException ex) {
                Logger.getLogger(DetalheVaga.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Erro");
        }
    }
 }
    public class CorLabel extends DefaultTableCellRenderer implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            return this;

        }
    }
}
